{"version":3,"sources":["../src/helpers.js"],"names":[],"mappings":";;;;;;IAAM,MAAM;aAAN,MAAM;8BAAN,MAAM;;;iBAAN,MAAM;;;;;;;;;gCAOA,GAAG,EAAE;AACT,mBAAO,AAAC,OAAO,GAAG,KAAK,WAAW,IAAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC;SAClF;;;;;;;;;;;;qCASY,IAAI,EAAE,IAAI,EAAE;AACrB,gBAAI,IAAI,GAAG,EAAE,CAAC;AACd,iBAAK,IAAI,SAAS,IAAI,IAAI,EAAE;AACxB,oBAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aACrC;AACD,iBAAK,IAAI,SAAS,IAAI,IAAI,EAAE;AACxB,oBAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aACrC;AACD,mBAAO,IAAI,CAAC;SACf;;;;;;;;;;;kCAQS,IAAI,EAAE;AACZ,gBAAI,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC;AACxB,gBAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpC,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,oBAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACd,uBAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACxB,qBAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;iBAChC;;AAED,oBAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACzB,2BAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;iBAC/C;aACJ;AACD,mBAAO,IAAI,CAAC;SACf;;;;;;;;;;;;kCASS,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;AACzB,gBAAI,OAAO,CAAC;;AAEZ,gBAAI,IAAI,EAAE;AACN,oBAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACtB,oBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,AAAC,CAAC,CAAC;AAC5D,uBAAO,GAAG,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;aAC/C,MACI;AACD,uBAAO,GAAG,EAAE,CAAC;aAChB;AACD,oBAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,OAAO,GAAG,UAAU,CAAC;SAC/D;;;WAtEC,MAAM","file":"helpers.js","sourcesContent":["class Helper {\n    /**\n     * Checks if the given object is empty or not.\n     *\n     * @param obj\n     * @returns {boolean}\n     */\n    isEmpty(obj) {\n        return (typeof obj === 'undefined') || obj === null || obj === \"\" || obj === 0;\n    }\n\n    /**\n     * Merge the attributes of two obj  ects.\n     *\n     * @param obj1\n     * @param obj2\n     * @returns {{}}\n     */\n    mergeObjects(obj1, obj2) {\n        var obj3 = {};\n        for (var attrname1 in obj1) {\n            obj3[attrname1] = obj1[attrname1];\n        }\n        for (var attrname2 in obj2) {\n            obj3[attrname2] = obj2[attrname2];\n        }\n        return obj3;\n    }\n\n    /**\n     * Gets a cookie for the given name.\n     *\n     * @param name\n     * @returns {*}\n     */\n    getCookie(name) {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1, c.length);\n            }\n\n            if (c.indexOf(nameEQ) === 0) {\n                return c.substring(nameEQ.length, c.length);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Sets a cookie to the given name.\n     *\n     * @param name\n     * @param value\n     * @param days\n     */\n    setCookie(name, value, days) {\n        var expires;\n\n        if (days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n            expires = \"; expires=\" + date.toGMTString();\n        }\n        else {\n            expires = \"\";\n        }\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n    }\n}\n"]}