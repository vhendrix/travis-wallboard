{"version":3,"sources":["../../../src/Repo/Build/BuildModel.js"],"names":[],"mappings":";;;;;;IAAM,KAAK;AACP,aADE,KAAK,CACK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE;8BADhE,KAAK;;AAEH,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACb,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;;iBAXC,KAAK;;kCAaG,MAAM,EAAE;AACd,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;;;kCAES,MAAM,EAAE;AACd,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;;;qCAEY;AACT,mBAAO,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,UAAU,CAAC;SAC5F;;;oCAEW;AACR,mBAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,UAAU,CAAC;SAC/D;;;mCAEU;AACP,mBAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;SACxF;;;yCAEgB;AACb,gBAAI,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC/C,gBAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;;AAErB,gBAAI,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;;AAExC,gBAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,GAAI,KAAK,AAAC,CAAE,CAAC;;AAE3C,gBAAI,OAAO,GAAG,CAAC,EAAE;AACb,uBAAO,IAAI,CAAC;aACf;AACD,mBAAO,KAAK,CAAC;SAChB;;;WA7CC,KAAK","file":"BuildModel.js","sourcesContent":["class Build {\n    constructor(id, number, name, state, startedAt, finishedAt, isPr) {\n        this.id = id;\n        this.number = number;\n        this.name = name;\n        this.state = state;\n        this.startedAt = startedAt;\n        this.finishedAt = finishedAt;\n        this.isPr = isPr;\n        this.branch = null;\n        this.commit = null;\n    }\n\n    setCommit(commit) {\n        this.commit = commit;\n    }\n\n    setBranch(branch) {\n        this.branch = branch;\n    }\n\n    isBuilding() {\n        return this.state === 'started' || this.state === 'created' || this.state === 'received';\n    }\n\n    isPassing() {\n        return this.state === 'passed' || this.state === 'canceled';\n    }\n\n    isFailed() {\n        return this.state === 'failed' || this.state === 'error' || this.state === 'errored';\n    }\n\n    hasRecentError() {\n        var dt = new Date(Date.parse(this.finishedAt));\n        var now = new Date();\n\n        var diff = now.getTime() - dt.getTime();\n\n        var minutes = Math.floor((diff / (60000)));\n\n        if (minutes < 5) {\n            return true;\n        }\n        return false;\n    }\n}\n"]}