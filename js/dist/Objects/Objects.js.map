{"version":3,"sources":["../../src/Objects/Objects.js"],"names":[],"mappings":"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","file":"Objects.js","sourcesContent":["angular.module('travisWallBoard.objects', [])\n    .provider(\n        'responsehelper', function () {\n            let data = {\n                parseBuildData: function (data) {\n                    let parsed = angular.fromJson(data);\n                    let response = {};\n                    response.builds = [];\n                    angular.forEach(\n                        parsed.builds, function (build, idx) {\n                            let buildModel = new Build(build.commit_id, build.number, build.number, build.state, build.started_at, build.finished_at, build.pull_request);\n                            let committerModel = new Committer(parsed.commits[idx].committer_name, parsed.commits[idx].committer_email);\n                            let commitModel = new Commit(parsed.commits[idx].message, committerModel);\n                            if (build.pull_request) {\n                                buildModel.setBranch(build.pull_request_title);\n                            } else {\n                                buildModel.setBranch(parsed.commits[idx].branch);\n                            }\n                            buildModel.setCommit(commitModel);\n                            response.builds.push(buildModel);\n                        }\n                    );\n                    return response;\n                }\n            };\n            return {\n                $get: function () {\n                    return {data: data};\n                }\n            }\n        }\n    )\n    .provider(\n        'twsettings', function () {\n            let helper = new Helper();\n            let data = {\n                useMocks: false,\n                private_uri: 'https://api.travis-ci.com/',\n                opensource_uri: 'https://api.travis-ci.org/',\n                users: [],\n                projects: {},\n                //holds what repos use what connection data.\n                repos: {},\n\n                setUsers: function ($users) {\n                    this.users = $users;\n                    helper.setPersistentValue('userData', $users);\n                },\n\n                setProjects: function ($projects) {\n                    this.projects = $projects;\n                    helper.setPersistentValue('projectData', $projects);\n                },\n\n                getToken: function (isPrivate, token) {\n                    if (isPrivate === \"YES\") {\n                        return 'token ' + token;\n                    } else {\n                        return null;\n                    }\n                },\n\n                getSlug: function () {\n                    return this.slug;\n                },\n\n                getUri: function ($user) {\n                    if (this.useMocks) {\n                        return '/Mocks/MockServer.php/?slug=';\n                    } else if ($user.isPrivate === \"YES\") {\n                        return this.private_uri;\n                    } else {\n                        return this.opensource_uri;\n                    }\n                }\n            };\n\n            return {\n                loadUserData: function () {\n                    data.users = helper.getPersistentValue('userData');\n                    if (data.users == null) {\n                        data.users = [];\n                    }\n                },\n                loadProjectData: function () {\n                    data.projects = helper.getPersistentValue('projectData');\n\n                    if (data.projects == null) {\n                        data.projects = {};\n                    }\n                },\n                $get: function () {\n                    return {\n                        data: data\n                    };\n                }\n            };\n        }\n    );\n"]}