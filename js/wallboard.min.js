"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}!function(){angular.module("travisWallBoard",["angular-md5","ngRoute","travisWallBoard.objects","travisWallBoard.filters","travisWallBoard.services","travisWallBoard.directives","travisWallBoard.controllers","travisWallBoard.resources"]).config(["$routeProvider","twsettingsProvider",function($routeProvider,twsettings){twsettings.loadUserData(),twsettings.loadProjectData(),$routeProvider.when("/repos",{templateUrl:"partials/repos.html",controller:"ReposController"}),$routeProvider.when("/showmyrepos/:repo",{templateUrl:"partials/repos.html",controller:"ReposController"}),$routeProvider.when("/project/:user/:slug",{templateUrl:"partials/project.html",controller:"ProjectController"}),$routeProvider.when("/settings",{templateUrl:"partials/settings.html",controller:"SettingsController"}),$routeProvider.when("/repo-settings",{templateUrl:"partials/repo-settings.html",controller:"RepoSettingsController"}),$routeProvider.otherwise({redirectTo:"/repos"})}])}(),function(){angular.module("travisWallBoard.directives",[]).directive("travisBuild",function(){return{templateUrl:function(elem,attr){return"partials/build-"+attr.type+".html"}}}).directive("travisBuildModal",function(){return{templateUrl:function(){return"partials/build-recent-failed.html"}}}).directive("travisServerError",function(){return{templateUrl:function(){return"partials/server-error.html"}}})}(),function(){angular.module("travisWallBoard.filters",[]).filter("stateClass",function(){return function(state){var blockClass="";return blockClass="failed"===state?"btn-danger text-danger":"passed"===state?"btn-success text-success":"started"===state||"received"===state||"created"===state?"btn-info text-info":"canceled"===state?"btn-info text-info text-canceled":"btn-warning"}}).filter("getSlugName",["twsettings",function(twsettings){return function(string){var slug=string.replace(twsettings.data.slug+"/","");return slug}}]).filter("timeAgo",function(){return function(dateString){var dt=new Date(Date.parse(dateString)),now=new Date,diff=now.getTime()-dt.getTime(),minutes=Math.floor(diff/6e4);if(isNaN(minutes))return"1 Seconds";if(0===minutes){var seconds=Math.floor(diff/1e3);return seconds+" Seconds"}if(minutes>1440)return Math.floor(diff/864e5)+" Days";if(minutes>60){var hours=Math.floor(diff/36e5);return minutes=Math.floor(diff%36e5/6e4),hours+" Hours and "+minutes+" Minutes"}return minutes+" Minutes"}}).filter("orderObjectByReverse",function(){return function(input,attribute){if(!angular.isObject(input))return input;var array=[];for(var objectKey in input)array.push(input[objectKey]);return array.sort(function(a,b){var dta=Date.parse(a[attribute]),dtb=Date.parse(b[attribute]);return dtb>dta?1:dta===dtb?0:-1}),array}}).filter("orderObjectParam",function(){return function(input,attribute){if(!angular.isObject(input))return input;var array=[];for(var objectKey in input)array.push(input[objectKey]);return array.sort(function(a,b){return a[attribute].localeCompare(b[attribute])}),array}})}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),Helper=function(){function Helper(){_classCallCheck(this,Helper)}return _createClass(Helper,[{key:"isEmpty",value:function(obj){return"undefined"==typeof obj||null===obj||""===obj||0===obj}},{key:"mergeObjects",value:function(obj1,obj2){var obj3={};for(var attrname1 in obj1)obj3[attrname1]=obj1[attrname1];for(var attrname2 in obj2)obj3[attrname2]=obj2[attrname2];return obj3}},{key:"getCookie",value:function(name){for(var nameEQ=name+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "===c.charAt(0);)c=c.substring(1,c.length);if(0===c.indexOf(nameEQ))return c.substring(nameEQ.length,c.length)}return null}},{key:"setCookie",value:function(name,value,days){var expires;if(days){var date=new Date;date.setTime(date.getTime()+24*days*60*60*1e3),expires="; expires="+date.toGMTString()}else expires="";document.cookie=name+"="+value+expires+"; path=/"}}]),Helper}();!function(){angular.module("travisWallBoard.resources",["ngResource"]).factory("TravisRepos",function($resource,twsettings){return{resource:function(name,uri,isPrivate,token){return $resource(uri+"repos/"+name,{},{getRepos:{params:{active:!0},method:"GET",headers:{Accept:"application/vnd.travis-ci.2+json",Authorization:twsettings.data.getToken(isPrivate,token)}}})}}}).factory("TravisBuild",function($resource,twsettings){return{resource:function(){return $resource(twsettings.data.getUri("repos")+twsettings.data.slug+"/:slug/builds/:buildid",{slug:"@slug",buildid:"@buildid"},{getBuild:{params:{slug:0,buildid:0},method:"GET",headers:{Accept:"application/vnd.travis-ci.2+json",Authorization:twsettings.data.getToken()}}})}}}).factory("TravisBuilds",function($resource,twsettings){return{resource:function(name,uri,isPrivate,token){return $resource(uri+"repos/"+name+"/:slug/builds",{slug:"@slug",event_type:"push"},{getBuilds:{params:{slug:0,event_type:"push"},method:"GET",headers:{Accept:"application/vnd.travis-ci.2+json",Authorization:twsettings.data.getToken(isPrivate,token)}},getBuildsForProject:{params:{slug:0,event_type:void 0},method:"GET",headers:{Accept:"application/vnd.travis-ci.2+json",Authorization:twsettings.data.getToken(isPrivate,token)}}})}}}).factory("TravisToken",function($resource){return $resource("https://api.travis-ci.com/auth/github",{github_token:"@githubtoken"},{getToken:{params:{github_token:"@githubtoken"},method:"POST",headers:{Accept:"application/vnd.travis-ci.2+json"}}})})}(),function(){angular.module("travisWallBoard.services",[]).service("TravisWallboardService",["twsettings",function(twsettings){var $building={},getBuildData=function($name,$commit,$build){var $buildData={};return $buildData.name=$name,"undefined"==typeof $build?$buildData:("undefined"!=typeof $build.state?$buildData.state=$build.state:$build.state="passed",$buildData.finished_at=$build.finished_at,$buildData.started_at=$build.started_at,$buildData.is_pr=$build.pull_request,$build.pull_request?$buildData.branch=$build.pull_request_title:$buildData.branch=$commit.branch,$buildData.commit_message=$commit.message,$buildData.committer_name=$commit.committer_name,$buildData.committer_email=$commit.committer_email,$buildData)};this.getReposFromResponse=function($response,$user){var $repos={},projects=twsettings.data.projects;return angular.forEach($response.repos,function($repo){var name=$user.name;$user.isPrivate&&(name+=" private"),!$repo.active||"undefined"!=typeof projects[name]&&"undefined"!=typeof projects[name][$repo.id]&&"YES"!==projects[name][$repo.id].enabled||($repos[$repo.id]=$repo)}),$repos},this.getProjectsFromResponse=function($response){var $repos={};return angular.forEach($response.repos,function($repo){$repo.active&&($repos[$repo.id]=$repos[$repo.id]||{},$repos[$repo.id].name=$repo.slug,$repos[$repo.id].enabled="YES")}),$repos},this.getReposForUsersFromResponse=function($response,$user){var $repos={},projects=twsettings.data.projects;return angular.forEach($response.repos,function($repo){var name=$user.name;$user.isPrivate&&(name+=" private"),!$repo.active||"undefined"!=typeof projects[name]&&"undefined"!=typeof projects[name][$repo.id]&&"YES"!==projects[name][$repo.id]||($repos[$repo.slug]=$user)}),$repos},this.getUpdatedReposFromResponse=function($repos,$response){var $updatedRepos={};return angular.forEach($response.repos,function($repo){"undefined"==typeof $building[$repo.id]&&($building[$repo.id]="done"),$repo.active&&null==$repo.last_build_finished_at&&"building"!==$building[$repo.id]?($building[$repo.id]="building",$updatedRepos[$repo.id]=$repo):$repo.active&&null!==$repo.last_build_finished_at&&"building"===$building[$repo.id]&&($building[$repo.id]="done",$updatedRepos[$repo.id]=$repo)}),$updatedRepos},this.getBuildsForRepo=function($slug,$repoId,$response){var $latestBuild=$response.builds[0],$latestCommit=$response.commits[0];return getBuildData($slug,$latestCommit,$latestBuild)},this.getBuildsForProject=function($slug,$response){var $builds={};return angular.forEach($response.builds,function(build,key){var $data=getBuildData($slug,$response.commits[key],build);"undefined"==typeof $builds[$data.branch]&&($builds[$data.branch]=$data)}),$builds}}]).factory("DisplayFunctions",function(){return{isFailed:function(state){return"failed"===state||"error"===state||"errored"===state},getErrorsClass:function(builds){var count=0;return angular.forEach(builds,function(build){if("failed"===build.state||"error"===build.state||"errored"===build.state){var dt=new Date(Date.parse(build.finished_at)),now=new Date,diff=now.getTime()-dt.getTime(),minutes=Math.floor(diff/6e4);5>minutes&&count++}}),count>3?"col-md-6 errors-"+count:"col-md-12 errors-"+count},showModal:function(builds){var failed=!1;return angular.forEach(builds,function(build){if("failed"===build.state||"error"===build.state||"errored"===build.state){var dt=new Date(Date.parse(build.finished_at)),now=new Date,diff=now.getTime()-dt.getTime(),minutes=Math.floor(diff/6e4);if(5>minutes)return failed=!0,!0}}),failed},recentError:function(finishedAt){var dt=new Date(Date.parse(finishedAt)),now=new Date,diff=now.getTime()-dt.getTime(),minutes=Math.floor(diff/6e4);return 5>minutes?!0:!1},isBuilding:function(state){return"started"===state||"created"===state||"received"===state},isPassing:function(state){return"passed"===state||"canceled"===state}}}).value("version","0.1")}(),function(){var isMenuHidden=!0,isMenuAnimating=!1,getAgo=function(dateString){var dt=new Date(Date.parse(dateString)),now=new Date,diff=now.getTime()-dt.getTime(),minutes=Math.floor(diff/6e4);if(isNaN(minutes))return"1 Seconds";if(0===minutes){var seconds=Math.floor(diff/1e3);return seconds+" Seconds"}if(minutes>1440)return Math.floor(diff/864e5)+" Days";if(minutes>60){var hours=Math.floor(diff/36e5);return minutes=Math.floor(diff%36e5/6e4),hours+" Hours and "+minutes+" Minutes"}return minutes+" Minutes"};$(document).ready(function(){function showMenu(){$(".tw-menu").animate({opacity:1,top:0},1e3,function(){isMenuAnimating=!1}),$(".board").animate({top:52},1e3)}function hideMenu(){$(".tw-menu").animate({opacity:.25,top:-52},2e3,function(){isMenuAnimating=!1}),$(".board").animate({top:0},2e3)}setInterval(function(){$(".time").each(function(){"undefined"==typeof $(this).data("finished_at")&&$(this).attr("data-finished_at",Date("Now").toString()),$(this).text(getAgo($(this).data("finished_at")))})},1e3),$(".board").mousemove(function(event){event.pageY<72&&!isMenuAnimating&&isMenuHidden?(isMenuAnimating=!0,isMenuHidden=!1,showMenu()):-1!==window.location.hash.indexOf("settings")||$("ul.nav.navbar-nav").find("li").hasClass("open")||isMenuAnimating||isMenuHidden||(isMenuAnimating=!0,isMenuHidden=!0,hideMenu())})})}($),angular.module("travisWallBoard.controllers",[]),angular.module("travisWallBoard.controllers").controller("TestController",["$scope",function($scope){$scope.test="Test succesfull",$scope.testFunction=function(){return $scope.test},$scope.setTest=function(test){$scope.test=test}}]),angular.module("travisWallBoard.objects",[]).provider("twsettings",function(){var helper=new Helper,data={useMocks:!1,private_uri:"https://api.travis-ci.com/",opensource_uri:"https://api.travis-ci.org/",users:[],projects:{},repos:{},setUsers:function($users){this.users=$users,helper.setCookie("userData",JSON.stringify($users),750)},setProjects:function($projects){this.projects=$projects,helper.setCookie("projectData",JSON.stringify($projects),750)},getToken:function(isPrivate,token){return"YES"===isPrivate?"token "+token:null},getSlug:function(){return this.slug},getUri:function($user){return this.useMocks?"/Mocks/MockServer.php/?slug=":"YES"===$user.isPrivate?this.private_uri:this.opensource_uri}};return{loadUserData:function(){data.users=JSON.parse(helper.getCookie("userData"))},loadProjectData:function(){data.projects=JSON.parse(helper.getCookie("projectData")),null==data.projects&&(data.projects={})},$get:function(){return{data:data}}}}),angular.module("travisWallBoard.controllers").controller("ProjectController",["$scope","twsettings","TravisWallboardService","DisplayFunctions","$interval","TravisBuilds","$routeParams",function($scope,twsettings,$travisWallboardService,DisplayFunctions,$interval,TravisBuilds,routeParams){var interval=1e3,errors=0;$scope.displayFunctions=DisplayFunctions,$scope.repos={},$scope.builds={},$scope.errorScreen=!1,$scope.handleErrors=function(){"undefined"==typeof errors?(errors=0,$scope.errorScreen=!1):errors+=1,errors>10&&($scope.errorScreen=!0)},$scope.loadBuildsForRepo=function(){var slug=routeParams.slug,$user=twsettings.data.repos[routeParams.user+"/"+routeParams.slug],timer=$user.polling||30;"undefined"==typeof $user.lastupdate||$user.lastupdate>=timer*interval?($user.lastupdate=0,$scope.loadBuild($user,slug)):$user.lastupdate+=interval},$scope.loadBuild=function($user,slug){TravisBuilds.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token).getBuildsForProject({slug:slug},function(response){$scope.builds=$travisWallboardService.getBuildsForProject(slug,response)},$scope.handleErrors)},twsettings.data.repos[routeParams.user+"/"+routeParams.slug]&&$scope.loadBuildsForRepo();var initialBuildRepoTimer=$interval(function(){twsettings.data.repos[routeParams.user+"/"+routeParams.slug]&&($scope.loadBuildsForRepo(),$interval.cancel(initialBuildRepoTimer))},2e3),buildRepoTimer=$interval($scope.loadBuildsForRepo,interval);$scope.$on("$destroy",function(){$interval.cancel(buildRepoTimer)})}]),angular.module("travisWallBoard.controllers").controller("MenuReposController",["$scope","twsettings","DisplayFunctions","$interval","TravisWallboardService","TravisRepos","$routeParams",function($scope,twsettings,DisplayFunctions,$interval,$travisWallboardService,TravisRepos,routeParams){var helper=new Helper;angular.isDefined(routeParams.repo)&&twsettings.data.setUsers([{isPrivate:"NO",name:routeParams.repo}]),$scope.displayFunctions=DisplayFunctions,$scope.repos=$scope.repos||{},$scope.setInitialBuilds=function(){angular.forEach(twsettings.data.users,function($user){helper.isEmpty($user.name)||TravisRepos.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token).getRepos(function(response){$scope.repos=helper.mergeObjects($scope.repos,$travisWallboardService.getReposFromResponse(response,$user)),twsettings.data.repos=helper.mergeObjects(twsettings.data.repos,$travisWallboardService.getReposForUsersFromResponse(response,$user))})})},$scope.setInitialBuilds()}]);var Menu=function Menu(name){_classCallCheck(this,Menu),this.name=name};angular.module("travisWallBoard.controllers").controller("ReposController",["$scope","twsettings","TravisWallboardService","DisplayFunctions","$interval","TravisRepos","TravisBuilds","$routeParams",function($scope,twsettings,$travisWallboardService,DisplayFunctions,$interval,TravisRepos,TravisBuilds,routeParams){var errors=0,helper=new Helper,interval=1e3;angular.isDefined(routeParams.repo)&&twsettings.data.setUsers([{isPrivate:"NO",name:routeParams.repo}]),$scope.displayFunctions=DisplayFunctions,$scope.repos={},$scope.pendingRepos={},$scope.builds={},$scope.errorScreen=!1,$scope.loadBuilds=function($repos,$user){angular.forEach($repos,function(repo){$scope.loadBuildsForRepo(repo,$user,!0)})},$scope.checkUpdateFinished=function(newbuild,$repoid,$repo){"undefined"!=typeof $scope.builds[$repo.id]&&("undefined"!=typeof newbuild.state&&newbuild.state==$scope.builds[$repoid].state&&newbuild.started_at===$scope.builds[$repoid].started_at&&newbuild.finished_at===$scope.builds[$repoid].finished_at?$scope.pendingRepos[$repoid]=$repo:"undefined"!=typeof $scope.pendingRepos[$repoid]&&($scope.pendingRepos[$repoid]=null,delete $scope.pendingRepos[$repoid]))},$scope.loadBuildsForRepo=function($repo,$user,$first){var slug=$repo.slug.replace($user.name+"/","");TravisBuilds.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token).getBuilds({slug:slug},function($response){var newbuild=$travisWallboardService.getBuildsForRepo(slug,$repo.id,$response);$first!==!0&&$scope.checkUpdateFinished(newbuild,$repo.id,$repo),$scope.builds[$repo.id]=newbuild,errors=0},$scope.handleErrors)},$scope.loadRepos=function(){angular.forEach(twsettings.data.users,function($user){if(!helper.isEmpty($user.name)){var resource=TravisRepos.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token);resource.getRepos(function(response){errors=0;var newRepos=$travisWallboardService.getReposFromResponse(response,$user);$scope.repos=helper.mergeObjects($scope.repos,newRepos),$scope.loadBuilds(newRepos,$user)},$scope.handleErrors)}})},$scope.pollRepos=function(){angular.forEach(twsettings.data.users,function($user){var timer=$user.polling||30;"undefined"==typeof $user.lastupdate||$user.lastupdate>=timer*interval?($user.lastupdate=0,$scope.loadRepo($user)):$user.lastupdate+=interval})},$scope.loadRepo=function($user){TravisRepos.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token).getRepos(function(response){errors=0,$scope.errorScreen=!1;var $updatedRepos=$travisWallboardService.getUpdatedReposFromResponse($scope.repos,response);angular.forEach($updatedRepos,function($repo){$scope.loadBuildsForRepo($repo,$user,!1)}),angular.forEach($scope.pendingRepos,function($repo){$scope.loadBuildsForRepo($repo,$user,!1)})},$scope.handleErrors)},$scope.handleErrors=function(){"undefined"==typeof errors?(errors=0,$scope.errorScreen=!1):errors+=1,errors>10&&($scope.errorScreen=!0)},$scope.loadRepos();var pollTimer=$interval($scope.pollRepos,interval);$scope.$on("$destroy",function(){$interval.cancel(pollTimer)})}]),angular.module("travisWallBoard.controllers").controller("SettingsController",["$scope","twsettings","md5","TravisToken",function($scope,twsettings,md5,TravisToken){$scope.users=twsettings.data.users||[],$scope.submit=function(){twsettings.data.setUsers($scope.users)},$scope.remove=function(idx){$scope.users.splice(idx,1)},$scope.getToken=function(){TravisToken.getToken({githubtoken:$scope.githubtoken},function(response){$scope.generatedtoken=response.access_token})},$scope.githubtoken=null,$scope.generatedtoken=null}]),angular.module("travisWallBoard.controllers").controller("RepoSettingsController",["$scope","twsettings","TravisWallboardService","md5","TravisRepos",function($scope,twsettings,$travisWallboardService,md5,TravisRepos){$scope.users=twsettings.data.users||[],$scope.repos=$scope.repos||twsettings.data.projects,$scope.submit=function(){twsettings.data.setProjects($scope.repos),jQuery("#repo-success").show(1e3),setTimeout(function(){jQuery("#repo-success").hide(1e3)},1e4)},$scope.loadRepos=function(){angular.forEach(twsettings.data.users,function($user){if(!helper.isEmpty($user.name)){var resource=TravisRepos.resource($user.name,twsettings.data.getUri($user),$user.isPrivate,$user.token);resource.getRepos(function(response){var newRepos=$travisWallboardService.getProjectsFromResponse(response),name=$user.name;$user.isPrivate&&(name+=" private"),helper.isEmpty($scope.repos[name])&&($scope.repos[name]=newRepos)})}})},$scope.loadRepos()}]);
//# sourceMappingURL=wallboard.min.js.map
